#+TITLE: exo2
#+author: frederic boileau
#+email: frederic.boileau@protonmail.com


* consignes

- pdf:  [[file:exo-consignes/Exercice02_1016A19.pdf][exo2_consignes]]
  file:~/aux/ift1016b/exo-consignes/Exercice02_1016A19.pdf

Le programme devra :

1) Demander à l'utilisateur d'entrer un mot de passe, avec la fonction *prompt*,
   et stocker le résultat dans une variable nommée *mot*.
2) afficher le message "Mot de passe: $(mot entré)"
3) calculer en une seule expressions, la validité du mot de passe, et assigner
   le résultat à une variable nommée *valide*.
4) Si le mot de passe est valide : demander à l'utilisateur d'entrer le mot de
   passe une deuxième fois, avec la fonction prompt, et stocker le résultat dans
   une variable nommée *confirmation*.
5) Dans une variable nommée *identique*, calculer si les deux mots de passe entrés
   sont identiques
6) Si les deux mots de passe entrés sont identiques : afficher "Vous avez bien
   configuré votre mot de passe !"
7) Sinon, afficher : "Vous n'avez pas réécrit le même mot de passe"
8) Si le mot de passe est invalide : exit with error

Conditions de validité du mot de passe:
- sa longueur est entre 4 et 8 caractères
- son premier caractère est différent de son dernier
- son premier caractère est une lettre (soit majuscule ou miniscule)
- son deuxième caractère est non alphanumérique (ni lettre minuscule ou majuscule or chiffre)


* solutionnaire
** rapidement
#+begin_src js :tangle yes :comments link
var mot = prompt("Mot de passe : ")
var hasGoodLength = mot.length > 3 && mot.length < 9;
var isDipole = mot.charAt(0) != mot.charAt(mot.length-1);
var firstCharAlpha = mot.charAt(0)>="A" && mot.charAt(0)<="Z" || mot.charAt(0)>="a" && mot.charAt(0)<="z";
var secondCharNotAlphaNum =
    mot.charCodeAt(1)>=32  && mot.charCodeAt(1)<=47  ||
    mot.charCodeAt(1)>=58  && mot.charCodeAt(1)<=96  ||
    mot.charCodeAt(1)>=123 && mot.charCodeAt(1)<=126;
var valid = hasGoodLength && isDipole && firstCharAlpha && secondCharNotAlphaNum;

if (valid){
    var secondInput  = prompt("Entrez votre mot de passe à nouveau");
    if(mot == secondInput){
        print("Vous avez bien configuré votre mot de passe !");
    }
    else {
        print("Vous n'avez pas réécrit le même mot de passe");
    }
}
else {
    print("Mot de passe invalide");
}
#+end_src

** iteration
Donc admettons que l'on veuille souvent demander un mot de passe a quelqu'une,
on voudra donc donne un nom a la procédure précédente. Pour ce faire on peut
en faire une fonction:
#+begin_src js
function askPassword(){
    var mot = prompt("Mot de passe : ")
    var hasGoodLength = mot.length > 3 && mot.length < 9;
    var isDipole = mot.charAt(0) != mot.charAt(mot.length-1);
    var firstCharAlpha = mot.charAt(0)>="A" && mot.charAt(0)<="Z" || mot.charAt(0)>="a" && mot.charAt(0)<="z";
    var secondCharNotAlphaNum =
        mot.charCodeAt(1)>=32  && mot.charCodeAt(1)<=47  ||
        mot.charCodeAt(1)>=58  && mot.charCodeAt(1)<=96  ||
        mot.charCodeAt(1)>=123 && mot.charCodeAt(1)<=126;
    var valid = hasGoodLength && isDipole && firstCharAlpha && secondCharNotAlphaNum;

    if (valid){
        var secondInput  = prompt("Entrez votre mot de passe à nouveau");
        if(mot == secondInput){
            print("Vous avez bien configuré votre mot de passe !");
        }
        else {
            print("Vous n'avez pas réécrit le même mot de passe");
        }
    }
    else {
        print("Mot de passe invalide");
    }
}

#+end_src

** cependant c est bien inutile
Il faut recuperer le mot de passe, on le fait avec return:

#+begin_src js
function askPassword(){
    var mot = prompt("Mot de passe : ")
    var hasGoodLength = mot.length > 3 && mot.length < 9;
    var isDipole = mot.charAt(0) != mot.charAt(mot.length-1);
    var firstCharAlpha = mot.charAt(0)>="A" && mot.charAt(0)<="Z" || mot.charAt(0)>="a" && mot.charAt(0)<="z";
    var secondCharNotAlphaNum =
        mot.charCodeAt(1)>=32  && mot.charCodeAt(1)<=47  ||
        mot.charCodeAt(1)>=58  && mot.charCodeAt(1)<=96  ||
        mot.charCodeAt(1)>=123 && mot.charCodeAt(1)<=126;
    var valid = hasGoodLength && isDipole && firstCharAlpha && secondCharNotAlphaNum;

    if (valid){
        var secondInput  = prompt("Entrez votre mot de passe à nouveau");
        if(mot == secondInput){
            print("Vous avez bien configuré votre mot de passe !");
            return mot;
        }
        else {
            print("Vous n'avez pas réécrit le même mot de passe");
        }
    }
    else {
        print("Mot de passe invalide");
    }
}

#+end_src

** on peut maintenant faire

#+begin_src js
var motDePasseUtilisateur = askPassword();
#+end_src

Cependendant qu'arrive-t-il si le mot de passe etait invalide ou que la
confirmation n'a pas fonctionné? Et bien la variable =motDePasseUtilisateur=
recoit ce qu'on appelle du "garbage". On est donc mieux de s'assurer que la
fonction retourne une valeur qui fait du sens peut importe son
*chemin d'exécution*. C'est à dire peut importe à travers quel
if else le programme descend.

Cependant que fait-on quand on ne dispose pas de valeur valide a retourner?
Il y a *beaucoup* de méchanismes pour gérer ce genre d'incertitude.
Le plus simple pour l'instant, c'est de renvoyer un "code" d'erreur,
qui est purement /arbitraire/, le code est juste une convention établie
par la programmeuse pour lui permettre de tester la validiter du résultat plus
tard.

Exemple:

#+begin_src js

function askPassword(){
    var mot = prompt("Mot de passe : ")
    var hasGoodLength = mot.length > 3 && mot.length < 9;
    var isDipole = mot.charAt(0) != mot.charAt(mot.length-1);
    var firstCharAlpha = mot.charAt(0)>="A" && mot.charAt(0)<="Z" || mot.charAt(0)>="a" && mot.charAt(0)<="z";
    var secondCharNotAlphaNum =
        mot.charCodeAt(1)>=32  && mot.charCodeAt(1)<=47  ||
        mot.charCodeAt(1)>=58  && mot.charCodeAt(1)<=96  ||
        mot.charCodeAt(1)>=123 && mot.charCodeAt(1)<=126;
    var valid = hasGoodLength && isDipole && firstCharAlpha && secondCharNotAlphaNum;

    if (valid){
        var secondInput  = prompt("Entrez votre mot de passe à nouveau");
        if(mot == secondInput){
            print("Vous avez bien configuré votre mot de passe !");
            return mot;
        }
        else {
            print("Vous n'avez pas réécrit le même mot de passe");
            return "confirmation echouee";
        }
    }
    else {
        print("Mot de passe invalide");
        return "invalide";
    }
}
#+end_src

** encore mieux
...


* references

#+name: utf-16 reference
http://www.fileformat.info/info/charset/UTF-16/list.htm
